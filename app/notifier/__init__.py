"""
–ú–æ–¥—É–ª—å —Å–∏—Å—Ç–µ–º—ã —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è CL Bot.

–≠—Ç–æ—Ç –º–æ–¥—É–ª—å –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ç–∏–ø–æ–≤ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º —Å –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º—ã–º–∏ –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞–º–∏. –°–∏—Å—Ç–µ–º–∞ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç –≤–∞–∂–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è, 
—Ç–∞–∫–∏–µ –∫–∞–∫ –¥–Ω–∏ —Ä–æ–∂–¥–µ–Ω–∏—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏—Ö –∫–Ω–∏–∂–µ–∫,
–∏—Å—Ç–µ—á–µ–Ω–∏–µ —Å—Ä–æ–∫–∞ –¥–µ–π—Å—Ç–≤–∏—è —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤ –∏ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ –∫–æ—Ñ–µ–º–∞—à–∏–Ω.

–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–ª—è—é—Ç—Å—è –≤ —Å—Ç—Ä–æ–≥–æ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–µ –≤—Ä–µ–º—è (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –≤ 9:00),
—á—Ç–æ –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ—Ç –ø–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏ –º–Ω–æ–∂–µ—Å—Ç–≤–∞ —Ä–∞–∑—Ä–æ–∑–Ω–µ–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
–≤ —Ç–µ—á–µ–Ω–∏–µ –¥–Ω—è.
"""

import asyncio
import time
from datetime import datetime

from aiogram import Bot

from config import SETTINGS

from app.core.funcs.app import get_app
from app.notifier.check_birthday import check_birthday
from app.notifier.check_lmk import check_lmk, check_exp_lmk
from app.notifier.check_anniversary import check_anniversary
from app.notifier.check_certs import check_certs, check_exp_certs
from app.notifier.check_espresso_machines import check_espresso_machines, format_notification_message
from app.core.funcs.user import get_all_to_notify

# –•—Ä–∞–Ω–∏–ª–∏—â–µ –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏–π, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è
pending_notifications = {
    'birthday': [],
    'lmk': [],
    'certificates': [],
    'anniversary': [],
    'espresso': []
}

# –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º –¥–µ–Ω—å –ø–æ—Å–ª–µ–¥–Ω–µ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
last_notification_day = None


async def send_message(chat_id, text):
    """
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —á–µ—Ä–µ–∑ Telegram API.
    
    Args:
        chat_id (int): –£–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —á–∞—Ç–∞, –∫—É–¥–∞ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è —Å–æ–æ–±—â–µ–Ω–∏–µ
        text (str): –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
    """
    bot = Bot(SETTINGS.BOT_TOKEN, parse_mode='html')
    await bot.send_message(
        chat_id=chat_id,
        text=text
    )
    await bot.close()


def is_notification_time():
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –≤—Ä–µ–º–µ–Ω–µ–º –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π.
    
    –°—Ä–∞–≤–Ω–∏–≤–∞–µ—Ç —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è —Å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–º –≤—Ä–µ–º–µ–Ω–µ–º –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π,
    –¥–æ–ø—É—Å–∫–∞—è –ø–æ–≥—Ä–µ—à–Ω–æ—Å—Ç—å –≤ ¬±2 –º–∏–Ω—É—Ç—ã –¥–ª—è –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏.
    
    Returns:
        bool: True –µ—Å–ª–∏ —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö –æ–∫–Ω–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏,
              False –≤ –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ
    """
    app = get_app()
    notify_time = app.time_to_notify
    
    # –†–∞–∑–±–∏—Ä–∞–µ–º –≤—Ä–µ–º—è –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è (—Ñ–æ—Ä–º–∞—Ç '9:00')
    notify_hour, notify_minute = map(int, notify_time.split(':'))
    
    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è
    now = datetime.now()
    current_hour, current_minute = now.hour, now.minute
    print(current_hour, current_minute, notify_hour, notify_minute)
    
    # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤—Ä–µ–º—è –≤ –º–∏–Ω—É—Ç—ã —Å –Ω–∞—á–∞–ª–∞ –¥–Ω—è –¥–ª—è –æ–±–æ–∏—Ö –∑–Ω–∞—á–µ–Ω–∏–π
    current_time_minutes = current_hour * 60 + current_minute
    notify_time_minutes = notify_hour * 60 + notify_minute
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –≤ –æ–∫–Ω–µ –¥–æ–ø—É—Å—Ç–∏–º—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π (¬±2 –º–∏–Ω—É—Ç—ã)
    return abs(current_time_minutes - notify_time_minutes) < 2


def should_send_missed_notifications():
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –Ω—É–∂–Ω–æ –ª–∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–ø—É—â–µ–Ω–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è.
    
    –í—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏, –Ω–µ –±—ã–ª–æ –ª–∏ –ø—Ä–æ–ø—É—â–µ–Ω–æ
    –≤—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –≤ —Ç–µ–∫—É—â–∏–π –¥–µ–Ω—å (–Ω–∞–ø—Ä–∏–º–µ—Ä, –µ—Å–ª–∏ –±–æ—Ç 
    –±—ã–ª –≤—ã–∫–ª—é—á–µ–Ω –≤–æ –≤—Ä–µ–º—è –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏).
    
    Returns:
        bool: True –µ—Å–ª–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∑–∞ —Å–µ–≥–æ–¥–Ω—è –µ—â–µ –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è–ª–∏—Å—å –∏ 
              —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è —É–∂–µ –ø—Ä–æ—à–ª–æ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–∫–∏,
              False –≤ –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ
    """
    global last_notification_day
    
    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è
    now = datetime.now()
    current_day = now.day
    
    # –†–∞–∑–±–∏—Ä–∞–µ–º –≤—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–∫–∏
    app = get_app()
    notify_time = app.time_to_notify
    notify_hour, notify_minute = map(int, notify_time.split(':'))
    
    # –ï—Å–ª–∏ –≤—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–∂–µ –ø—Ä–æ—à–ª–æ —Å–µ–≥–æ–¥–Ω—è –∏ –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è–ª–∏ —Å–µ–≥–æ–¥–Ω—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    current_time_minutes = now.hour * 60 + now.minute
    notify_time_minutes = notify_hour * 60 + notify_minute
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º: 
    # 1. –ï—Å–ª–∏ –¥–µ–Ω—å –ø–æ—Å–ª–µ–¥–Ω–µ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å —Ç–µ–∫—É—â–∏–º –¥–Ω–µ–º (–∏–ª–∏ None)
    # 2. –ï—Å–ª–∏ —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –±–æ–ª—å—à–µ –≤—Ä–µ–º–µ–Ω–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏
    return (last_notification_day != current_day and 
            current_time_minutes > notify_time_minutes)


async def __dr_notifier():
    """
    –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –ø—Ä–∏–±–ª–∏–∂–∞—é—â–∏—Ö—Å—è –¥–Ω–µ–π —Ä–æ–∂–¥–µ–Ω–∏—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤.
    
    –†–µ–≥—É–ª—è—Ä–Ω–æ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç —Å–ø–∏—Å–æ–∫ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –∏ —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –ø—Ä–µ–¥—Å—Ç–æ—è—â–∏—Ö
    –¥–Ω—è—Ö —Ä–æ–∂–¥–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–µ –∑–∞—Ç–µ–º –±—É–¥—É—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –≤ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è.
    """
    while True:
        dr = check_birthday()
        if dr:
            message = "üéÇ –í –±–ª–∏–∂–∞–π—à–∏–µ –¥–Ω–∏ –î–Ω–∏ –†–æ–∂–¥–µ–Ω–∏—è —É —Å–ª–µ–¥—É—é—â–∏—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤:\n\n"
            for employee in dr:
                if employee.get_days_to_birth() == 0:
                    message += f"{employee.name} - –∑–∞–≤—Ç—Ä–∞ –î–µ–Ω—å –†–æ–∂–¥–µ–Ω–∏—è! –£—Ä–∞!\n"
                else:   
                    message += f"{employee.name} - —á–µ—Ä–µ–∑ {employee.get_days_to_birth()} –¥–Ω–µ–π\n"
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è
            pending_notifications['birthday'] = [(message, get_all_to_notify())]

        await asyncio.sleep(get_app().dr_notify_time_interval)


async def __lmk_notifier():
    """
    –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —Å—Ç–∞—Ç—É—Å–∞ –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏—Ö –∫–Ω–∏–∂–µ–∫ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤.
    
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∫–∞–∫ —É–∂–µ –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã–µ, —Ç–∞–∫ –∏ —Å–∫–æ—Ä–æ –∏—Å—Ç–µ–∫–∞—é—â–∏–µ –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–µ –∫–Ω–∏–∂–∫–∏,
    —Ñ–æ—Ä–º–∏—Ä—É—è —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.
    """
    while True:
        messages = []
        
        lmk = check_lmk()
        if lmk:
            message = "‚ö†Ô∏è –ü—Ä–æ—Å—Ä–æ—á–µ–Ω—ã –º–µ–¥. –∫–Ω–∏–∂–∫–∏ —É —Å–ª–µ–¥—É—é—â–∏—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤:\n\n"
            for employee in lmk:
                message += f"{employee.name} - –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–∞ –º–µ–¥. –∫–Ω–∏–∂–∫–∞\n"
            messages.append(message)

        lmk = check_exp_lmk()
        if lmk:
            message = "‚ö†Ô∏è –í –±–ª–∏–∂–∞–π—à–∏–µ –¥–Ω–∏ –∏—Å—Ç–µ–∫–∞–µ—Ç —Å—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è –õ–ú–ö —É —Å–ª–µ–¥—É—é—â–∏—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤:\n\n"
            for employee in lmk:
                message += f"{employee.name} - —á–µ—Ä–µ–∑ {employee.get_days_lmk()} –¥–Ω–µ–π\n"
            messages.append(message)
        
        if messages:
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è
            pending_notifications['lmk'] = [(msg, get_all_to_notify()) for msg in messages]

        await asyncio.sleep(get_app().lmk_notify_time_interval)


async def __certs_notifier():
    """
    –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã—Ö —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤.
    
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∫–∞–∫ —É–∂–µ –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã–µ, —Ç–∞–∫ –∏ —Å–∫–æ—Ä–æ –∏—Å—Ç–µ–∫–∞—é—â–∏–µ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã 
    —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤, —Ñ–æ—Ä–º–∏—Ä—É—è —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è.
    """
    while True:
        messages = []
        
        employees = check_certs()
        if employees:
            message = "‚ö†Ô∏è –ü—Ä–æ—Å—Ä–æ—á–µ–Ω—ã —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã —É —Å–ª–µ–¥—É—é—â–∏—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤:\n\n"
            for employee, cert_type in employees:
                message += f"{employee.name} - –ø—Ä–æ—Å—Ä–æ—á–µ–Ω —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç {cert_type} –æ—Ç {employee.get_cert_by_type(cert_type)}\n"
            messages.append(message)

        employees = check_exp_certs()
        if employees:
            message = "‚ö†Ô∏è –í –±–ª–∏–∂–∞–π—à–∏–µ –¥–Ω–∏ –∏—Å—Ç–µ–∫–∞–µ—Ç —Å—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤ —É —Å–ª–µ–¥—É—é—â–∏—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤:\n\n"
            for employee, cert_type in employees:
                message += f"{employee.name} - {cert_type} ‚Äì —á–µ—Ä–µ–∑ {employee.get_days_to_cert(cert_type)} –¥–Ω–µ–π\n"
            messages.append(message)
        
        if messages:
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è
            pending_notifications['certificates'] = [(msg, get_all_to_notify()) for msg in messages]

        await asyncio.sleep(get_app().certs_time_interval)


async def __anniversary_notifier():
    """
    –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –ø—Ä–∏–±–ª–∏–∂–∞—é—â–∏—Ö—Å—è —é–±–∏–ª–µ–µ–≤ —Ä–∞–±–æ—Ç—ã —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤.
    
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å–ø–∏—Å–æ–∫ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –Ω–∞ –ø—Ä–µ–¥–º–µ—Ç —é–±–∏–ª–µ–µ–≤ –∏ —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç 
    —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ —Ç–∞–∫–∏—Ö —Å–æ–±—ã—Ç–∏—è—Ö.
    """
    while True:
        anniversary = check_anniversary()
        if anniversary:
            message = "üéâ –í –±–ª–∏–∂–∞–π—à–∏–µ –¥–Ω–∏ —é–±–∏–ª–µ–∏ —É —Å–ª–µ–¥—É—é—â–∏—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤:\n\n"
            for employee in anniversary:
                message += f"{employee.name} - —á–µ—Ä–µ–∑ {employee.get_days_to_anniversary()} –¥–Ω–µ–π\n"
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è
            pending_notifications['anniversary'] = [(message, get_all_to_notify())]

        await asyncio.sleep(get_app().anniversary_time_interval)


async def __espresso_notifier():
    """
    –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∫–æ—Ñ–µ–º–∞—à–∏–Ω.
    
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç—å —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–≥–æ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è –∏ 
    –∑–∞–º–µ–Ω—ã —É–ø–ª–æ—Ç–Ω–∏—Ç–µ–ª–µ–π –≤ –∫–æ—Ñ–µ–º–∞—à–∏–Ω–∞—Ö, —Ñ–æ—Ä–º–∏—Ä—É—è —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è.
    """
    while True:
        machines = check_espresso_machines()
        if machines:
            message = format_notification_message(machines)
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è
            pending_notifications['espresso'] = [(message, get_all_to_notify())]

        await asyncio.sleep(86400)


async def __notification_sender():
    """
    –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–∞–∫–æ–ø–ª–µ–Ω–Ω—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è.
    
    –û—Ç–≤–µ—á–∞–µ—Ç –∑–∞ –ø—Ä–æ–≤–µ—Ä–∫—É —Ç–µ–∫—É—â–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –∏ –æ—Ç–ø—Ä–∞–≤–∫—É –≤—Å–µ—Ö –Ω–∞–∫–æ–ø–ª–µ–Ω–Ω—ã—Ö
    —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ç–∏–ø–æ–≤ –≤ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ –≤—Ä–µ–º—è –¥–Ω—è.
    –ü—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–ø—É—Å–∫–µ —Ç–∞–∫–∂–µ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç, –Ω–µ –±—ã–ª–∏ –ª–∏ –ø—Ä–æ–ø—É—â–µ–Ω—ã —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    –∑–∞ —Ç–µ–∫—É—â–∏–π –¥–µ–Ω—å.
    """
    global last_notification_day
    
    # –ü—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–ø—É—Å–∫–µ –ø—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –ø—Ä–æ–ø—É—Å—Ç–∏–ª–∏ –ª–∏ –º—ã –≤—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–µ–≥–æ–¥–Ω—è
    if should_send_missed_notifications():
        print("–û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–ø—É—â–µ–Ω–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å—Ä–∞–∑—É...")
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤—Å–µ –Ω–∞–∫–æ–ø–ª–µ–Ω–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
        for category, notifications in pending_notifications.items():
            for message, chat_ids in notifications:
                for chat_id in chat_ids:
                    await send_message(chat_id, message)
            
            # –û—á–∏—â–∞–µ–º –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
            pending_notifications[category] = []
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –¥–µ–Ω—å –ø–æ—Å–ª–µ–¥–Ω–µ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
        last_notification_day = datetime.now().day
    
    while True:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø—Ä–∏—à–ª–æ –ª–∏ –≤—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
        print(is_notification_time())
        if is_notification_time():
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤—Å–µ –Ω–∞–∫–æ–ø–ª–µ–Ω–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
            for category, notifications in pending_notifications.items():
                for message, chat_ids in notifications:
                    for chat_id in chat_ids:
                        await send_message(chat_id, message)
                
                # –û—á–∏—â–∞–µ–º –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
                pending_notifications[category] = []
            
            # –û–±–Ω–æ–≤–ª—è–µ–º –¥–µ–Ω—å –ø–æ—Å–ª–µ–¥–Ω–µ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
            last_notification_day = datetime.now().day
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Ä–µ–º—è –∫–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É
        await asyncio.sleep(60)


async def _start_notifier():
    """
    –ó–∞–ø—É—Å–∫–∞–µ—Ç –≤—Å–µ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏ —Å–∏—Å—Ç–µ–º—ã —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π.
    
    –ò—Å–ø–æ–ª—å–∑—É–µ—Ç asyncio.gather –¥–ª—è –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ –≤—Å–µ—Ö —Ñ—É–Ω–∫—Ü–∏–π-notifier,
    —á—Ç–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Ç–∏–ø—ã —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ.
    """
    await asyncio.gather(
        __dr_notifier(),
        __lmk_notifier(),
        __certs_notifier(),
        __anniversary_notifier(),
        __espresso_notifier(),
        __notification_sender()  # –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
    )


def start_notifier():
    """
    –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Å–∏—Å—Ç–µ–º—ã —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π.
    
    –í—ã–∑—ã–≤–∞–µ—Ç—Å—è –∏–∑ –≥–ª–∞–≤–Ω–æ–≥–æ –º–æ–¥—É–ª—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏
    –≤—Å–µ–π —Å–∏—Å—Ç–µ–º—ã –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π.
    """
    asyncio.run(_start_notifier())